<service>
    <name>searchResult_{{pageNumber}}</name>
    <resources>
        <item>
            <name>response.body</name>
            <contentType>text/html</contentType>
        </item>
    </resources>
    <request> <!-- Specifies how to retrieve/access service -->
        <url>
            <![CDATA[
            http://dl.acm.org/results.cfm?within={{{query}}}&start={{{startResult}}}&CFID={{{cfid}}}&CFTOKEN={{{cftoken}}}&adv=1&COLL=DL&qrycnt=440462&DL=ACM&Go.x=52&Go.y=6&termzone=all&allofem=&anyofem=&noneofem=&peoplezone=Name&people=&peoplehow=and&keyword=&keywordhow=AND&affil=&affilhow=AND&pubin=&pubinhow=and&pubby=&pubbyhow=OR&since_year={{startYear}}&before_year={{endYear}}&pubashow=OR&sponsor=&sponsorhow=AND&confdate=&confdatehow=OR&confloc=&conflochow=OR&isbnhow=OR&isbn=&doi=&ccs=&subj=&dlr=GUIDE
            ]]>
            <!--
            http://dl.acm.org/results.cfm?h=1&amp;start={{{startResult}}}&amp;cfid={{{cfid}}}&amp;cftoken={{{cftoken}}}
            -->
            <!--
            http://dl.acm.org/results.cfm?within={{{query}}}&amp;CFID={{{cfid}}}&amp;CFTOKEN={{{cftoken}}}&amp;adv=1&amp;COLL=DL&amp;qrycnt=2358153&amp;DL=ACM&amp;Go.x=35&amp;Go.y=3&amp;termzone=all&amp;allofem=&amp;anyofem=&amp;noneofem=&amp;peoplezone=Name&amp;people=&amp;peoplehow=and&amp;keyword=&amp;keywordhow=AND&amp;affil=&amp;affilhow=AND&amp;pubin=&amp;pubinhow=and&amp;pubby=&amp;pubbyhow=OR&amp;since_year=&amp;before_year=&amp;pubashow=OR&amp;sponsor=&amp;sponsorhow=AND&amp;confdate=&amp;confdatehow=OR&amp;confloc=&amp;conflochow=OR&amp;isbnhow=OR&amp;isbn=&amp;doi=&amp;ccs=&amp;subj=
        -->
        </url>
         <!-- HTTP Method: GET, POST, etc. -->
        <method>
            GET
            <!--
            POST
            -->
        </method>
        <!-- POST parameters -->
        <!--
        <body contentType="application/x-www-form-urlencoded">
            <item>
                <name>query</name>
                <value>{{query}}</value>
            </item>
            <item>
                <name>Go.x</name>
                <value>34</value>
            </item>
            <item>
                <name>Go.y</name>
                <value>16</value>
            </item>
        </body>
        -->
        <!--
        <cookies>
            <item>
                <name>CFID</name>
                <value>{{cfid}}</value>
            </item>
            <item>
                <name>CFTOKEN</name>
                <value>{{cftoken}}</value>
            </item>
            <item>
                <name>DEEPCHK</name>
                <value>1</value>
            </item>
            <item>
                <name>__atuvc</name>
                <value>{{atuvc}}</value>
            </item>
        </cookies>
        -->
    </request>
    <response expand="true" from="response.body">
        <data>
            <item>
                <name>areFakeResults</name>
                <value mode="script">
                    <![CDATA[
                    // if el is undefined, then is too early (called from MixedToConverter)
                    if (el) {
                        var bodyText = el.select('body').text();

                        // if the following is true,
                        // then the obtained results are actually fake
                        // (they don't come from the executed search, since actually it has no results)
                        var result = bodyText.indexOf('was not found.') != -1 && bodyText.indexOf('Start a new search or use the navigation below to refine the total result set.') != -1;

                        // (for now only string returns as supported in scripts)
                        result ? "true" : "false"
                    }
                    ]]>
                </value>
            </item>
        </data>
        <value>

            <meta>
                <query>{{query}}</query>
                <pageNumber>{{pageNumber}}</pageNumber>
                <startYear>{{startYear}}</startYear>
                <endYear>{{endYear}}</endYear>

                <count el="table > tbody > tr > td" expand="true" mode="script">
                    <condition mode="script">
                        el.text().trim().match(/Results ([\d,]+?) - ([\d,]+?) of ([\d,]+?) /) != null
                    </condition>
                    <value>
                        var count;

                        var areFakeResults = "{{areFakeResults}}";
                        if (areFakeResults == "true") {
                            count = "0";

                        } else {
                            count = el.text().trim().match(/Results ([\d,]+?) - ([\d,]+?) of ([\d,]+?) /)[3];
                            // Remove all "," separators
                            count = count.replace(new RegExp(',', 'g'), '');
                        }

                        count
                    </value>
                </count>
            </meta>

            <articles el="a" expand="true" mode="list">
                <condition mode="script">
                    <![CDATA[
                    "{{areFakeResults}}" != "true" && el.attr('href').indexOf('citation.cfm') != -1
                    ]]>
                </condition>
                <value>
                    <item>
                        <title mode="text" />
                        <url mode="script">el.attr('href').trim()</url>
                        <id mode="script">
                          <!-- get 647583.730422 from id=647583.730422& -->
                          <!-- Note: first item might have id 0 (INFORMS Journal on Computing: Volume 0) -->
                          <![CDATA[
                              el.attr('href').match(/id=([\s\S]*?)&/)[1]
                          ]]>
                        </id>

                        <authors expand="true" mode="text">
                            <el mode="script">
                                // .authors element inside first parent table
                                el.parents().not(':not(table)').first().select('.authors')
                            </el>
                        </authors>
                        
                        <year expand="true" mode="script">
                            <el mode="script">
                                el.parents().not(':not(table)').first()
                                            .select("td[class*=small-text]")
                            </el>
                            <condition mode="script">
                                <![CDATA[
                                // Text (trimmed) should have format "October 2015"
                                var months = ['January', 'February', 'March', 'April', 'May', 'June',
                                             'July', 'August', 'September', 'October', 'November', 'December'];
                                var articleMonth = el.text().trim().split(' ')[0];
                                // Check if it is actually a month.
                                // Note: we do an old-style for loop here, 
                                // since indexOf on Array seem to don't work
                                // in this javascript environment
                                var found = false;
                                for (var i=0; i<months.length; i++) {
                                    if (months[i] == articleMonth) {
                                        found = true;
                                        break;
                                    }
                                }
                                found
                                ]]>
                            </condition>
                            <value>
                                el.text().trim().split(' ')[1]
                            </value>
                        </year>

                        <publication expand="true" mode="text">
                            <el mode="script">
                                el.parents().not(':not(table)').first().select('.addinfo')
                            </el>
                        </publication>

                        <keywords expand="true" mode="script">
                            <el mode="script">
                                el.parents().not(':not(table)').first().select('.abstract2')
                            </el>
                            <value>
                                <![CDATA[
                                // Take everything after the "Keywords: " text
                                el.text().match(/Keywords: ([\s\S]+)/)[1].trim()
                                ]]>
                            </value>
                        </keywords>

                    </item>
                </value>
            </articles>

        </value>
    </response>
</service>
