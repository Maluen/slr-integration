@article{Skok201339,
title = "Formation of teat order and estimation of piglets’ distribution along the mammary complex using mid-domain effect (MDE) model ",
journal = "Applied Animal Behaviour Science ",
volume = "144",
number = "1–2",
pages = "39 - 45",
year = "2013",
note = "",
issn = "0168-1591",
doi = "http://dx.doi.org/10.1016/j.applanim.2012.11.014",
url = "http://www.sciencedirect.com/science/article/pii/S0168159112003668",
author = "Janko Skok and Dejan Škorjanc",
keywords = "Domestic pig",
keywords = "Mammary complex",
keywords = "Teat order",
keywords = "Suckling behaviour",
keywords = "Geometric constraints",
keywords = "Mid-domain effect (MDE) ",
abstract = "Domestic piglets (Sus scrofa domesticus) establish relatively stable teat order after the first week postpartum. Formation of teat order is normally accompanied by intense competition between littermates. In this period, piglets’ behaviour and their distribution along the mammary complex is subject to various external influences. In the present study, time-dependent changes of suckling pattern in domestic piglets and the potential factors affecting piglets’ suckling distribution along the mammary complex were investigated. Eleven sows with their litters (110 piglets) were included in the analysis. Throughout the lactation period there were 27 observations per litter. In addition to milk intake and piglet body weight we focused on the impact of geometric constraints (physical limitation of the mammary complex), which has previously been disregarded in studies of piglet suckling behaviour but could play a crucial role, especially at the beginning of the lactation period. Changes in piglets’ distribution were analysed for correlation with changes in milk intake and body weight during lactation. The impact of geometric constraints was estimated using mid-domain effect (MDE) models. Analysis of the first two-weeks of lactation revealed that teat order stability increased after the first week, reaching a transition maximum by the second week (58%), when the effect of geometric constraints was still significant (r2 = 0.679; p &lt; 0.05). Longer periods of lactation led to consistent suckling order, which was no longer affected by geometric constraints (p ≥ 0.05). Alteration of piglet distribution was not associated with the quantity of milk they consumed (r2 = 0.612; p &gt; 0.05). Variation in milk intake was explained by piglet body weight (r2 = 0.701; p &lt; 0.05). Results indicate that the physical limitation of the mammary complex was the only factor that directly affected piglets’ distribution, which was thereby subject to the MDE. The \{MDE\} model enabled precise estimation of the piglets’ behaviour on the mammary complex and provides novel information towards understanding of the suckling process. "
}
@article{Cuevas2013216,
title = "Beneficios que aporta la metodología \{MDE\} a los entornos de desarrollo de sistemas de tiempo real ",
journal = "Revista Iberoamericana de Automática e Informática Industrial \{RIAI\} ",
volume = "10",
number = "2",
pages = "216 - 227",
year = "2013",
note = "",
issn = "1697-7912",
doi = "http://dx.doi.org/10.1016/j.riai.2013.03.011",
url = "http://www.sciencedirect.com/science/article/pii/S1697791213000137",
author = "César Cuevas and Laura Barros and Patricia López Martínez and José M. Drake",
keywords = "Entorno de diseño",
keywords = "tiempo real",
keywords = "MDE",
keywords = "modelado",
keywords = "herramientas de planificación",
keywords = "reserva de recursos",
keywords = "Design environment",
keywords = "real-time",
keywords = "MDE",
keywords = "modelling and schedulability tools ",
abstract = "Resumen Se analizan los beneficios que aporta el empleo de la metodología Model-Driven Engineering (MDE) cuando se utiliza como base y soporte de entornos de diseño de sistemas de tiempo real. Con esta metodología, se incrementa la facilidad de uso del entorno para el diseñador, ya que, en función del paradigma que utilice y de la fase del proceso de diseño que esté llevando a cabo, el entorno le ofrece una vista especializada del sistema, la cual presenta de una forma precisa y coherente la información sobre la que está decidiendo. Por otro lado, una infraestructura \{MDE\} facilita el desarrollo de herramientas y su integración en el entorno, ya que, a través de los mecanismos de gestión y transformación de modelos con los que está dotada, cada herramienta recibe únicamente la información que utiliza, estructurada de modo adecuado, y así mismo, puede generar sus resultados de la forma que le sea natural, ya que el entorno los sabe gestionar. Por último, la metodología \{MDE\} permite considerar el entorno de diseño de tiempo real como una vista especializada que se integra coherentemente en un entorno más general, el cual soporta las restantes fases del diseño del sistema. This paper analyses the benefits provided by the Model-Driven Engineering (MDE) methodology when it is used as the base support for real-time systems design environments. The application of \{MDE\} eases the environment usage by the designer, because depending on the chosen paradigm and on the stage of the development process, the environment offers a specialized view of the system, presenting in a precise and coherent fashion the information under decision. On the other hand, an \{MDE\} infrastructure facilitates the development of tools and their integration within the environment, as, through the model management and transformation mechanisms this infrastructure is equipped with, every tool receives as input the right information it uses, structured as it needs, and likewise, each tool can generate its results in its natural format, relying in that the environment is able to manage them. Finally, the \{MDE\} methodology allows considering the real-time design environment as a specialized view meant to be integrated in a more general framework that encompasses the remaining system design stages. "
}
@article{Dubois2014199,
title = "An MDE-based framework to support the development of Mixed Interactive Systems ",
journal = "Science of Computer Programming ",
volume = "89, Part B",
number = "",
pages = "199 - 221",
year = "2014",
note = "Special issue on Success Stories in Model Driven Engineering ",
issn = "0167-6423",
doi = "http://dx.doi.org/10.1016/j.scico.2013.03.007",
url = "http://www.sciencedirect.com/science/article/pii/S0167642313000671",
author = "Emmanuel Dubois and Christophe Bortolaso and Damien Appert and Guillaume Gauffre",
keywords = "Mixed Interactive System",
keywords = "Model-Driven Engineering",
keywords = "Development process",
keywords = "Domain-specific language",
keywords = "Flexible model transformation ",
abstract = "Abstract In the domain of Human–Computer Interaction (HCI), recent advances in sensors, communication technologies, miniaturization and computing capabilities have led to new and advanced forms of interaction. Among them, Mixed Interactive Systems (MIS), form a class of interactive systems that comprises augmented reality, tangible interfaces and ambient computing; \{MIS\} aim to take advantage of physical and digital worlds to promote a more transparent integration of interactive systems with the user’s environment. Due to the constant change of technologies and the multiplicity of these interaction forms, specific development approaches have been developed. As a result, numerous taxonomies, frameworks, \{API\} and models have emerged, each one covering a specific and limited aspect of the development of MIS. To support a coherent use of these multiple development resources and contribute to the increasing popularity of MIS, we have developed a framework based on Model-Driven Engineering. The goal is to take advantage of Model-Driven Engineering (MDE) standards, methodology and tools to support the manipulation of complementary Domain Specific Languages (DSL), to organize and link the use of different design and implementation resources, and to ensure a rationalized implementation based on design choices. In this paper, we first summarize existing uses of \{MDE\} in \{HCI\} before focusing on five major benefits \{MDE\} can provide in a \{MIS\} development context. We then detail which \{MDE\} tools and resources support these benefits and thus form the pillars of the success of an MDE-based \{MIS\} development approach. Based on this analysis, we introduce our framework, called Guide-Me, and illustrate its use through a case study. This framework includes two design models. Model transformations are also included to link one model to another; as a result the frameworks coverage extends from the earliest design step to a software component-based prototyping platform. A toolset based on the Eclipse Modeling Framework (EMF) that supports the use of the framework is also presented. We finally assess our MDE-based development process for \{MIS\} based on the five major \{MDE\} benefits for MIS. "
}
@article{González2014821,
title = "Formal verification of static software models in MDE: A systematic review ",
journal = "Information and Software Technology ",
volume = "56",
number = "8",
pages = "821 - 838",
year = "2014",
note = "",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2014.03.003",
url = "http://www.sciencedirect.com/science/article/pii/S0950584914000627",
author = "Carlos A. González and Jordi Cabot",
keywords = "MDE",
keywords = "Formal verification",
keywords = "OCL",
keywords = "Systematic literature review ",
abstract = "AbstractContext Model-driven Engineering (MDE) promotes the utilization of models as primary artifacts in all software engineering activities. Therefore, mechanisms to ensure model correctness become crucial, specially when applying \{MDE\} to the development of software, where software is the result of a chain of (semi)automatic model transformations that refine initial abstract models to lower level ones from which the final code is eventually generated. Clearly, in this context, an error in the model/s is propagated to the code endangering the soundness of the resulting software. Formal verification of software models is a promising approach that advocates the employment of formal methods to achieve model correctness, and it has received a considerable amount of attention in the last few years. Objective The objective of this paper is to analyze the state of the art in the field of formal verification of models, restricting the analysis to those approaches applied over static software models complemented or not with constraints expressed in textual languages, typically the Object Constraint Language (OCL). Method We have conducted a Systematic Literature Review (SLR) of the published works in this field, describing their main characteristics. Results The study is based on a set of 48 resources that have been grouped in 18 different approaches according to their affinity. For each of them we have analyzed, among other issues, the formalism used, the support given to OCL, the correctness properties addressed or the feedback yielded by the verification process. Conclusions One of the most important conclusions obtained is that current model verification approaches are strongly influenced by the support given to OCL. Another important finding is that in general, current verification tools present important flaws like the lack of integration into the model designer tool chain or the lack of efficiency when verifying large, real-life models. "
}
@article{Bruel2015660,
title = "\{MDE\} in Practice for Computational Science ",
journal = "Procedia Computer Science ",
volume = "51",
number = "",
pages = "660 - 669",
year = "2015",
note = "International Conference On Computational Science, \{ICCS\} 2015Computational Science at the Gates of Nature ",
issn = "1877-0509",
doi = "http://dx.doi.org/10.1016/j.procs.2015.05.182",
url = "http://www.sciencedirect.com/science/article/pii/S1877050915009904",
author = "Jean-Michel Bruel and Benoit Combemale and Ileana Ober and Hélène Raynal",
keywords = "Model-Driven Engineering",
keywords = "Domain-Specific Modeling Languages",
keywords = "Scientific Computing ",
abstract = "Abstract The complex problems that computational science addresses are more and more benefiting from the progress of computing facilities (simulators, librairies, accessible languages,. .). Nevertheless, the actual solutions call for several improvements. Among those, we address in this paper the needs for leveraging on knowledge and expertise by focusing on Domain-Specific Modeling Languages application. In this vision paper we illustrate, through concrete experiments, how the last \{DSML\} research help getting closer the problem and implementation spaces. "
}

