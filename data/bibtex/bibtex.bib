@article{Cuevas2013216,
title = "Beneficios que aporta la metodologÃ­a \{MDE\} a los entornos de desarrollo de sistemas de tiempo real ",
journal = "Revista Iberoamericana de AutomÃ¡tica e InformÃ¡tica Industrial \{RIAI\} ",
volume = "10",
number = "2",
pages = "216 - 227",
year = "2013",
note = "",
issn = "1697-7912",
doi = "http://dx.doi.org/10.1016/j.riai.2013.03.011",
url = "http://www.sciencedirect.com/science/article/pii/S1697791213000137",
author = "CÃ©sar Cuevas and Laura Barros and Patricia LÃ³pez MartÃ­nez and JosÃ© M. Drake",
keywords = "Entorno de diseÃ±o",
keywords = "tiempo real",
keywords = "MDE",
keywords = "modelado",
keywords = "herramientas de planificaciÃ³n",
keywords = "reserva de recursos",
keywords = "Design environment",
keywords = "real-time",
keywords = "MDE",
keywords = "modelling and schedulability tools ",
abstract = "Resumen Se analizan los beneficios que aporta el empleo de la metodologÃ­a Model-Driven Engineering (MDE) cuando se utiliza como base y soporte de entornos de diseÃ±o de sistemas de tiempo real. Con esta metodologÃ­a, se incrementa la facilidad de uso del entorno para el diseÃ±ador, ya que, en funciÃ³n del paradigma que utilice y de la fase del proceso de diseÃ±o que estÃ© llevando a cabo, el entorno le ofrece una vista especializada del sistema, la cual presenta de una forma precisa y coherente la informaciÃ³n sobre la que estÃ¡ decidiendo. Por otro lado, una infraestructura \{MDE\} facilita el desarrollo de herramientas y su integraciÃ³n en el entorno, ya que, a travÃ©s de los mecanismos de gestiÃ³n y transformaciÃ³n de modelos con los que estÃ¡ dotada, cada herramienta recibe Ãºnicamente la informaciÃ³n que utiliza, estructurada de modo adecuado, y asÃ­ mismo, puede generar sus resultados de la forma que le sea natural, ya que el entorno los sabe gestionar. Por Ãºltimo, la metodologÃ­a \{MDE\} permite considerar el entorno de diseÃ±o de tiempo real como una vista especializada que se integra coherentemente en un entorno mÃ¡s general, el cual soporta las restantes fases del diseÃ±o del sistema. This paper analyses the benefits provided by the Model-Driven Engineering (MDE) methodology when it is used as the base support for real-time systems design environments. The application of \{MDE\} eases the environment usage by the designer, because depending on the chosen paradigm and on the stage of the development process, the environment offers a specialized view of the system, presenting in a precise and coherent fashion the information under decision. On the other hand, an \{MDE\} infrastructure facilitates the development of tools and their integration within the environment, as, through the model management and transformation mechanisms this infrastructure is equipped with, every tool receives as input the right information it uses, structured as it needs, and likewise, each tool can generate its results in its natural format, relying in that the environment is able to manage them. Finally, the \{MDE\} methodology allows considering the real-time design environment as a specialized view meant to be integrated in a more general framework that encompasses the remaining system design stages. "
}
@article{NoguerasIso2012118,
title = "A model driven approach for the development of metadata editors, applicability to the annotation of geographic information resources ",
journal = "Data & Knowledge Engineering ",
volume = "81â€“82",
number = "",
pages = "118 - 139",
year = "2012",
note = "",
issn = "0169-023X",
doi = "http://dx.doi.org/10.1016/j.datak.2012.09.001",
url = "http://www.sciencedirect.com/science/article/pii/S0169023X12000845",
author = "Javier Nogueras-Iso and Miguel Ã�ngel Latre and RubÃ©n BÃ©jar and Pedro R. Muro-Medrano and F. Javier Zarazaga-Soria",
keywords = "Spatial Data Infrastructures",
keywords = "SDI",
keywords = "Metadata",
keywords = "Annotation",
keywords = "Model Driven Engineering",
keywords = "MDE",
keywords = "Model Driven Architecture",
keywords = "MDA",
keywords = "Metamodeling",
keywords = "SKOS ",
abstract = "Metadata are a key element for the development of information infrastructures because they facilitate the semantic description of contents and services. However, the diversity and heterogeneity of metadata standards have become a barrier for the generation of these metadata. Many metadata editors are not useful anymore because they do not support the latest version of metadata standards or the new profiles arisen in the market. Thus, this work proposes a model driven approach for the development of metadata editors, more focused on the generic treatment of metadata models than on the development of specific edition forms for a reduced set of metadata standards. This approach has been tested in the context of Spatial Data Infrastructures for the development of an Open Source tool called CatMDEdit. Additionally, the approach could be also applied to improve the efficiency of any metadata editor using a metamodeling development strategy. "
}
@incollection{Suman2014109,
title = "5 - Unified Modeling Language: untying the tangles ",
editor = "Suman, Aparajita ",
booktitle = "From Knowledge Abstraction to Management ",
publisher = "Chandos Publishing",
edition = "",
address = "",
year = "2014",
pages = "109 - 126",
isbn = "978-1-84334-703-3",
doi = "http://dx.doi.org/10.1533/9781780633695.109",
url = "http://www.sciencedirect.com/science/article/pii/B9781843347033500059",
author = "Aparajita Suman",
keywords = "Semantic Web",
keywords = "ontologies",
keywords = "UML",
keywords = "argoUML",
keywords = "meta-modeling approach ",
abstract = "Abstract: Over time, the Internet has become a corpus of interrelated content, viz. flat documents, dynamically generated documents and data, metadata, and multiple web services based on them. The hyper-linked structure of the web creates a dynamic relationship between context and content, making it difficult to get a complete picture of the conceptual mapping of the information. It can be difficult for a human reader to extract usable meaning. This human-understandable semantics can be achieved only when the conceptual structure of the content becomes an essential part of the posted material. Research studies have proved that UML-based ontologies can bring semantic coherence; their visual modeling can facilitate conceptual browsing and would be understandable to both machine and users. In this chapter, \{UML\} - the selected technology for framework development - is presented in detail. The chapter covers its evolution, development, features and components. It also summarizes the functioning of argoUML, a tool that can be used for the development of \{UML\} models. "
}
@article{Bertran201439,
title = "DiaSuite: A tool suite to develop Sense/Compute/Control applications ",
journal = "Science of Computer Programming ",
volume = "79",
number = "",
pages = "39 - 51",
year = "2014",
note = "Experimental Software and Toolkits (EST 4): A special issue of the Workshop on Academic Software Development Tools and Techniques (WASDeTT-3 2010) ",
issn = "0167-6423",
doi = "http://dx.doi.org/10.1016/j.scico.2012.04.001",
url = "http://www.sciencedirect.com/science/article/pii/S0167642312000652",
author = "Benjamin Bertran and Julien Bruneau and Damien Cassou and Nicolas Loriant and Emilie Balland and Charles Consel",
keywords = "Domain-specific design language",
keywords = "Tool-based development methodology",
keywords = "Generative programming",
keywords = "Pervasive computing ",
abstract = "We present DiaSuite, a tool suite that uses a software design approach to drive the development process. DiaSuite focuses on a specific domain, namely Sense/Compute/Control (SCC) applications. It comprises a domain-specific design language, a compiler producing a Java programming framework, a 2D-renderer to simulate an application, and a deployment framework. We have validated our tool suite on a variety of concrete applications in areas including telecommunications, building automation, robotics and avionics. "
}
@article{Laguna20131010,
title = "A systematic mapping study on software product line evolution: From legacy system reengineering to product line refactoring ",
journal = "Science of Computer Programming ",
volume = "78",
number = "8",
pages = "1010 - 1034",
year = "2013",
note = "Special section on software evolution, adaptability, and maintenance &amp; Special section on the Brazilian Symposium on Programming Languages ",
issn = "0167-6423",
doi = "http://dx.doi.org/10.1016/j.scico.2012.05.003",
url = "http://www.sciencedirect.com/science/article/pii/S0167642312000895",
author = "Miguel A. Laguna and Yania Crespo",
keywords = "Software product line",
keywords = "Evolution",
keywords = "Reengineering",
keywords = "Legacy system",
keywords = "Refactoring ",
abstract = "Software product lines (SPLs) are used in industry to develop families of similar software systems. Legacy systems, either highly configurable or with a story of versions and local variations, are potential candidates for reconfiguration as \{SPLs\} using reengineering techniques. Existing \{SPLs\} can also be restructured using specific refactorings to improve their internal quality. Although many contributions (including industrial experiences) can be found in the literature, we lack a global vision covering the whole life cycle of an evolving product line. This study aims to survey existing research on the reengineering of legacy systems into \{SPLs\} and the refactoring of existing \{SPLs\} in order to identify proven approaches and pending challenges for future research in both subfields. We launched a systematic mapping study to find as much literature as possible, covering the diverse terms involved in the search string (restructuring, refactoring, reengineering, etc. always connected with SPLs) and filtering the papers using relevance criteria. The 74 papers selected were classified with respect to several dimensions: main focus, research and contribution type, academic or industrial validation if included, etc. We classified the research approaches and analyzed their feasibility for use in industry. The results of the study indicate that the initial works focused on the adaptation of generic reengineering processes to \{SPL\} extraction. Starting from that foundation, several trends have been detected in recent research: the integrated or guided reengineering of (typically object-oriented) legacy code and requirements; specific aspect-oriented or feature-oriented refactoring into SPLs, and more recently, refactoring for the evolution of existing product lines. A majority of papers include academic or industrial case studies, though only a few are based on quantitative data. The degree of maturity of both subfields is different: Industry examples for the reengineering of the legacy system subfield are abundant, although more evaluation research is needed to provide better evidence for adoption in industry. Product line evolution through refactoring is an emerging topic with some pending challenges. Although it has recently received some attention, the theoretical foundation is rather limited in this subfield and should be addressed in the near future. To sum up, the main contributions of this work are the classification of research approaches as well as the analysis of remaining challenges, open issues, and research opportunities. "
}
@article{MartÃ­Oliet2012782,
title = "Rewriting logic bibliography by topic: 1990â€“2011 ",
journal = "The Journal of Logic and Algebraic Programming ",
volume = "81",
number = "7â€“8",
pages = "782 - 815",
year = "2012",
note = "Rewriting Logic and its Applications ",
issn = "1567-8326",
doi = "http://dx.doi.org/10.1016/j.jlap.2012.06.001",
url = "http://www.sciencedirect.com/science/article/pii/S1567832612000562",
author = "Narciso MartÃ­-Oliet and Miguel Palomino and Alberto Verdejo",
keywords = "Rewriting logic",
keywords = "Concurrency",
keywords = "Logical frameworks",
keywords = "Temporal logics",
keywords = "Formal specification and verification",
keywords = "Programming language semantics",
keywords = "Networks and distributed systems",
keywords = "Real-time systems",
keywords = "Probabilistic systems",
keywords = "Security",
keywords = "Bioinformatics ",
abstract = "This bibliography compiles, to the best of our knowledge, all the papers on rewriting logic and its applications which have been written during the more than 20 years that have passed since the introduction of rewriting logic in 1990. The papers are classified according to five main areas: foundations, logical and semantic framework, languages, tools, and applications. "
}
@article{Kosar2014622,
title = "Debugging measurement systems using a domain-specific modeling language ",
journal = "Computers in Industry ",
volume = "65",
number = "4",
pages = "622 - 635",
year = "2014",
note = "",
issn = "0166-3615",
doi = "http://dx.doi.org/10.1016/j.compind.2014.01.013",
url = "http://www.sciencedirect.com/science/article/pii/S0166361514000293",
author = "TomaÅ¾ Kosar and Marjan Mernik and Jeff Gray and TomaÅ¾ Kos",
keywords = "Debugging aid",
keywords = "Domain-specific modeling languages",
keywords = "Graphical environments",
keywords = "Usage experience ",
abstract = "Abstract Capturing physical data in the context of measurement systems is a demanding process that often requires many repetitions with different settings. To assist in this activity, a domain-specific modeling language (DSML) called Sequencer has been developed to enable the improved definition of measurement procedures. With Sequencer, the level of abstraction has been raised and sophisticated changes in measurement procedures are now enabled. Although there are numerous \{DSMLs\} like Sequencer in the existing literature, there are some obstacles working against the more widespread adoption of \{DSMLs\} in practice. One challenge is the lack of supporting tools for DSMLs, which would improve the capabilities of end-users of such languages. For instance, support for debugging a model expressed in a \{DSML\} is often neglected. The lack of a debugger at the proper abstraction level limits the domain experts in discovering and locating bugs in a model. In this paper, Sequencer is presented together with debugging facilities (called Ladybird) that are integrated in a modeling environment. Ladybird supports different execution modes (e.g., steps, breakpoints, animations, variable views, and stack traces) that can be helpful during the debugging of a model. Ladybird's primary contribution is in showing the value of error detection in complicated industrial environments, such as data acquisition in automotive testing. The paper contributes to a discussion of the implementation details of \{DSML\} debugging facilities and how such a debugger can be reused to support domains other than the measurement context of Sequencer. "
}
@article{tagkey2001B1,
title = "Bibliography Section ",
journal = "Journal of Chromatography A ",
volume = "940",
number = "1",
pages = "B1 - B118",
year = "2001",
note = "",
issn = "0021-9673",
doi = "http://dx.doi.org/10.1016/S0021-9673(91)88002-J",
url = "http://www.sciencedirect.com/science/article/pii/S002196739188002J",
key = "tagkey2001B1"
}
@article{Tsai20091578,
title = "Experience on knowledge-based software engineering: A logic-based requirements language and its industrial applications ",
journal = "Journal of Systems and Software ",
volume = "82",
number = "10",
pages = "1578 - 1587",
year = "2009",
note = "SI: \{YAU\} ",
issn = "0164-1212",
doi = "http://dx.doi.org/10.1016/j.jss.2009.03.019",
url = "http://www.sciencedirect.com/science/article/pii/S0164121209000521",
author = "Jeffrey J.P. Tsai and Alan Liu",
keywords = "Formal specification language",
keywords = "Nonmonotonic logic",
keywords = "Formal verification",
keywords = "Automatic code generation",
keywords = "Knowledge-based software engineering ",
abstract = "A formal requirements specification language plays an important role in software development. Not only can such language be used for stating requirements specification, but also can be used in many phases of software development life cycle. The \{FRORL\} project started from constructing a language with a solid logical foundation and further expanded to research in verification, validation, requirements analysis, debugging, and transformation. Research in this project aided in some industrial applications in which a code generation tool produced software for embedded systems. This article reports the experiences gained from this project and states the value of research in knowledge-based software engineering. "
}
@article{Thiry20091125,
title = "Functional metamodels for systems and software ",
journal = "Journal of Systems and Software ",
volume = "82",
number = "7",
pages = "1125 - 1136",
year = "2009",
note = "",
issn = "0164-1212",
doi = "http://dx.doi.org/10.1016/j.jss.2009.01.042",
url = "http://www.sciencedirect.com/science/article/pii/S0164121209000223",
author = "Laurent Thiry and Bernard Thirion",
keywords = "System modeling",
keywords = "Functional metamodeling",
keywords = "Model Driven Engineering (MDE) ",
abstract = "The modeling, analysis and design of systems is generally based on many formalisms to describe discrete and/or continuous behaviors, and to map these descriptions into a specific platform. In this context, the article proposes the concept of functional metamodeling to capture, then to integrate modeling languages. The concept offers an alternative to standard Model Driven Engineering (MDE) and is well adapted to mathematical descriptions such as the ones found in system modeling. As an application, a set of functional metamodels is proposed for dataflows (usable to model continuous behaviors), state-transition systems (usable to model discrete behaviors) and a metamodel for actions (to model interactions with a target platform and concurrent execution). A model of a control architecture for a legged robot is proposed as an application of these modeling languages. "
}
@article{VogelHeuser2014883,
title = "Model-driven engineering of Manufacturing Automation Software Projects â€“ A SysML-based approach ",
journal = "Mechatronics ",
volume = "24",
number = "7",
pages = "883 - 897",
year = "2014",
note = "1. Model-Based Mechatronic System Design 2. Model Based Engineering ",
issn = "0957-4158",
doi = "http://dx.doi.org/10.1016/j.mechatronics.2014.05.003",
url = "http://www.sciencedirect.com/science/article/pii/S0957415814000853",
author = "Birgit Vogel-Heuser and Daniel SchÃ¼tz and Timo Frank and Christoph Legat",
keywords = "Model-based system and software engineering",
keywords = "Distributed systems",
keywords = "Manufacturing automation system ",
abstract = "Abstract This paper comprises a SysML-based approach to support the model-driven engineering (MDE) of Manufacturing Automation Software Projects (MASP). The Systems Modeling Language (SysML) is adapted to define the SysML-AT (SysML for automation), a specialized language profile that covers (non-)functional requirements, corresponding software applications and properties of proprietary hardware components. Furthermore, SysML-AT supports an automated software generation for run-time environments conforming to \{IEC\} 61131-3. A prototypical tool support was realized for adapted SysML Parametric Diagrams (PD) inside an industrial automation software development tool. Coupling the model editor and online data from the provided run-time environment enables direct debugging inside the model. The approach was evaluated by several case studies and additional usability experiments. With the latter, the suitability of the \{MDE\} approach for future users was proven. "
}
@article{Wehrmeister2014844,
title = "Combining aspects and object-orientation in model-driven engineering for distributed industrial mechatronics systems ",
journal = "Mechatronics ",
volume = "24",
number = "7",
pages = "844 - 865",
year = "2014",
note = "1. Model-Based Mechatronic System Design 2. Model Based Engineering ",
issn = "0957-4158",
doi = "http://dx.doi.org/10.1016/j.mechatronics.2013.12.008",
url = "http://www.sciencedirect.com/science/article/pii/S0957415813002420",
author = "Marco AurÃ©lio Wehrmeister and Edison Pignaton de Freitas and AlÃ©cio Pedro Delazari Binotto and Carlos Eduardo Pereira",
keywords = "Model-Driven Engineering (MDE)",
keywords = "Aspect Oriented Software Development (AOSD)",
keywords = "Embedded and real-time system",
keywords = "Industrial mechatronics system",
keywords = "Design automation",
keywords = "Code generation ",
abstract = "Abstract Recent advances in technology enable the creation of complex industrial systems comprising mechanical, electrical, and logical â€“ software â€“ components. It is clear that new project techniques are demanded to support the design of such systems. At design phase, it is extremely important to raise abstraction level in earlier stages of product development in order to deal with such a complexity in an efficient way. This paper discusses Model Driven Engineering (MDE) applied to design industrial mechatronics systems. An aspect-oriented \{MDE\} approach is presented by means of a real-world case study, comprising requirements engineering up to code generation. An assessment of two well-known high-level paradigms, namely Aspect- and Object-Oriented paradigms, is deeply presented. Their concepts are applied at every design step of an embedded and real-time mechatronics system, specifically for controlling a product assembler industrial cell. The handling of functional and non-functional requirements (at modeling level) using aspects and objects is further emphasized. Both designs are compared using a set of software engineering metrics, which were adapted to be applied at modeling level. Particularly, the achieved results show the suitability of each paradigm for the system specification in terms of reusability quality of model elements. Focused on the generated code for each case study, statistics depicted an improvement in number of lines using aspects. "
}
@article{TÃ¶rngren2014745,
title = "Integrating viewpoints in the development of mechatronic products ",
journal = "Mechatronics ",
volume = "24",
number = "7",
pages = "745 - 762",
year = "2014",
note = "1. Model-Based Mechatronic System Design 2. Model Based Engineering ",
issn = "0957-4158",
doi = "http://dx.doi.org/10.1016/j.mechatronics.2013.11.013",
url = "http://www.sciencedirect.com/science/article/pii/S095741581300233X",
author = "Martin TÃ¶rngren and Ahsan Qamar and Matthias Biehl and Frederic Loiret and Jad El-khoury",
keywords = "Mechatronics design",
keywords = "Multiview modeling",
keywords = "Model-based design",
keywords = "Viewpoint integration",
keywords = "Viewpoint interrelations",
keywords = "Tool integration ",
abstract = "Abstract The development of mechatronic products involves multiple stakeholders which have different viewpoints and therefore use different concepts, models and tools to deal with their concerns of interest. This paper argues that an increased emphasis needs to be placed on the relations between viewpoints to be able to deal with the evolving scope and requirements on mechatronic products. We study relations between viewpoints at the levels of people, models and tools, and present solutions that are used to formally and explicitly capture such relations. Viewpoint contracts are used to define the vocabulary, assumptions and constraints required for ensuring smooth communication between stakeholders (people level). Dependency models capture relations between product properties belonging to different viewpoints, and how such dependencies relate to predictions and decisions (model level). Tool integration models describe the relations between tools in terms of traceability, data exchange, invocation and notifications (tool level). A major contribution of this paper is a unification approach, elaborating how these solutions can be used synergetically to integrate viewpoints. An industrial robot case study is utilized to illustrate the challenges and solutions with respect to relations between viewpoints, including the unification approach. "
}
@article{Iriondo2014866,
title = "On the use of model-based techniques for achieving multi-mode control architectures ",
journal = "Mechatronics ",
volume = "24",
number = "7",
pages = "866 - 882",
year = "2014",
note = "1. Model-Based Mechatronic System Design 2. Model Based Engineering ",
issn = "0957-4158",
doi = "http://dx.doi.org/10.1016/j.mechatronics.2014.05.002",
url = "http://www.sciencedirect.com/science/article/pii/S0957415814000816",
author = "Nagore Iriondo and Elisabet EstÃ©vez and DarÃ­o Orive and Marga Marcos",
keywords = "Automation systems",
keywords = "Mode switched systems",
keywords = "Supervision",
keywords = "Model Driven Engineering",
keywords = "Meta-modeling techniques",
keywords = "IEC 61131-3 standard ",
abstract = "Abstract Multi-operation mode processes are often described through a hybrid model using well-known formal descriptions such as hybrid automata. A multi-controller architecture has been proposed in the literature for coping with different dynamics. It is composed by as many control algorithms as operation modes and a supervisor that tracks the systemâ€™s operation, switching to the appropriate control algorithm when a new operation mode is reached. This paper explores the advantages of model-based techniques to automate the implementation of the supervisor and its integration into the final real-time control system from the simulation dynamic model. In particular, the Model Driven Engineering approach has been followed in order to provide a framework to support the development cycle of the control system for mode switched processes. It uses information from the model of the process and from the control loops designed and using model transformation techniques the supervisor is automatically generated. In order to provide independency from the particular simulation tools used for defining the process model, meta-models are proposed for both, the process and the supervisor, as well as for the necessary transformations. A proof of concept framework has been designed for the target field of automation applications, generating the supervisor in \{PLCopen\} \{XML\} format for achieving vendor independency. "
}
@article{Krupitzer2015184,
title = "A survey on engineering approaches for self-adaptive systems ",
journal = "Pervasive and Mobile Computing ",
volume = "17, Part B",
number = "",
pages = "184 - 206",
year = "2015",
note = "10 years of Pervasive Computing' In Honor of Chatschik Bisdikian ",
issn = "1574-1192",
doi = "http://dx.doi.org/10.1016/j.pmcj.2014.09.009",
url = "http://www.sciencedirect.com/science/article/pii/S157411921400162X",
author = "Christian Krupitzer and Felix Maximilian Roth and Sebastian VanSyckel and Gregor Schiele and Christian Becker",
keywords = "Taxonomy",
keywords = "Self-adaptation",
keywords = "Survey",
keywords = "Self-adaptive systems",
keywords = "Context adaptation ",
abstract = "Abstract The complexity of information systems is increasing in recent years, leading to increased effort for maintenance and configuration. Self-adaptive systems (SASs) address this issue. Due to new computing trends, such as pervasive computing, miniaturization of \{IT\} leads to mobile devices with the emerging need for context adaptation. Therefore, it is beneficial that devices are able to adapt context. Hence, we propose to extend the definition of \{SASs\} and include context adaptation. This paper presents a taxonomy of self-adaptation and a survey on engineering SASs. Based on the taxonomy and the survey, we motivate a new perspective on \{SAS\} including context adaptation. "
}
@article{Schobbens2007456,
title = "Generic semantics of feature diagrams ",
journal = "Computer Networks ",
volume = "51",
number = "2",
pages = "456 - 479",
year = "2007",
note = "Feature Interaction ",
issn = "1389-1286",
doi = "http://dx.doi.org/10.1016/j.comnet.2006.08.008",
url = "http://www.sciencedirect.com/science/article/pii/S1389128606002179",
author = "Pierre-Yves Schobbens and Patrick Heymans and Jean-Christophe Trigaux and Yves Bontemps",
keywords = "Feature diagram",
keywords = "Survey",
keywords = "Formal semantics",
keywords = "Feature interaction",
keywords = "Software product lines ",
abstract = "Feature Diagrams (FDs) are a family of popular modelling languages used to address the feature interaction problem, particularly in software product lines, \{FDs\} were first introduced by Kang as part of the \{FODA\} (Feature-Oriented Domain Analysis) method back in 1990. Afterwards, various extensions of \{FODA\} \{FDs\} were introduced to compensate for a purported ambiguity and lack of precision and expressiveness. However, they never received a formal semantics, which is the hallmark of precision and unambiguity and a prerequisite for efficient and safe tool automation. The reported work is intended to contribute a more rigorous approach to the definition, understanding, evaluation, selection and implementation of \{FD\} languages. First, we provide a survey of \{FD\} variants. Then, we give them a formal semantics, thanks to a generic construction that we call Free Feature Diagrams (FFDs). This demonstrates that \{FDs\} can be precise and unambiguous. This also defines their expressiveness. Many variants are expressively complete, and thus the endless quest for extensions actually cannot be justified by expressiveness. A finer notion is thus needed to compare these expressively complete languages. Two solutions are well-established: succinctness and embeddability, that express the naturalness of a language. We show that the expressively complete \{FDs\} fall into two succinctness classes, of which we of course recommend the most succinct. Among the succinct expressively complete languages, we suggest a new, simple one that is not harmfully redundant: Varied \{FD\} (VFD). Finally, we study the execution time that tools will need to solve useful problems in these languages. "
}
@article{Trujillo2014921,
title = "MultiPARTES: Multi-core partitioning and virtualization for easing the certification of mixed-criticality systems ",
journal = "Microprocessors and Microsystems ",
volume = "38",
number = "8, Part B",
pages = "921 - 932",
year = "2014",
note = "",
issn = "0141-9331",
doi = "http://dx.doi.org/10.1016/j.micpro.2014.09.004",
url = "http://www.sciencedirect.com/science/article/pii/S0141933114001380",
author = "Salvador Trujillo and Alfons Crespo and Alejandro Alonso and Jon PÃ©rez",
keywords = "Mixed-criticality",
keywords = "Multi-core",
keywords = "Partitioning",
keywords = "Hardware virtualization",
keywords = "Certification",
keywords = "Temporal and spatial separation ",
abstract = "Abstract The consumer market is continuously pushing for smarter, faster, more durable and cheaper products with ever more complex and sophisticated functionality. Other fields such as safetyâ€“critical and dependable applications are not unaware of these requirements, and even impose others (e.g. certification). In the current multi-core era, industry and research entities are facing the important challenge of fulfilling all these requirements, which often impose the necessity for integrating components with different levels of dependability in a single hardware platform. In this scenario, new concerns appear with respect to safety certification of the resulting mixed-criticality systems (e.g. temporal and spatial isolation). This article describes the research effort that is being conducted within the \{FP7\} MultiPARTES project, which is one of the initiatives launched by the European Commission to explore new solutions for developing certifiable mixed-criticality systems using heterogeneous multi-cores. The article explains the proposed development toolset for such systems, presents a proof-of-concept implementation and shows its applicability in a real-world application that needs to be certified, namely a wind-power turbine. "
}
@article{Nejati2012569,
title = "A SysML-based approach to traceability management and design slicing in support of safety certification: Framework, tool support, and case studies ",
journal = "Information and Software Technology ",
volume = "54",
number = "6",
pages = "569 - 590",
year = "2012",
note = "Special Section: Engineering Complex Software Systems through Multi-Agent Systems and SimulationSpecial Section: Engineering Complex Software Systems through Multi-Agent Systems and Simulation ",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2012.01.005",
url = "http://www.sciencedirect.com/science/article/pii/S095058491200016X",
author = "Shiva Nejati and Mehrdad Sabetzadeh and Davide Falessi and Lionel Briand and Thierry Coq",
keywords = "Safety certification",
keywords = "SysML",
keywords = "Traceability",
keywords = "Model slicing ",
abstract = "Context Traceability is one of the basic tenets of all safety standards and a key prerequisite for software safety certification. In the current state of practice, there is often a significant traceability gap between safety requirements and software design. Poor traceability, in addition to being a non-compliance issue on its own, makes it difficult to determine whether the design fulfills the safety requirements, mainly because the design aspects related to safety cannot be clearly identified. Objective The goal of this article is to develop a framework for specifying and automatically extracting design aspects relevant to safety requirements. This goal is realized through the combination of two components: (1) A methodology for establishing traceability between safety requirements and design, and (2) an algorithm that can extract for any given safety requirement a minimized fragment (slice) of the design that is sound, and yet easy to understand and inspect. Method We ground our framework on System Modeling Language (SysML). The framework includes a traceability information model, a methodology to establish traceability, and mechanisms for model slicing based on the recorded traceability information. The framework is implemented in a tool, named SafeSlice. Results We prove that our slicing algorithm is sound for temporal safety properties, and argue about the completeness of slices based on our practical experience. We report on the lessons learned from applying our approach to two case studies, one benchmark and one industrial case. Both studies indicate that our approach substantially reduces the amount of information that needs to be inspected for ensuring that a given (behavioral) safety requirement is met by the design. "
}
@article{Santiago20121340,
title = "Model-Driven Engineering as a new landscape for traceability management: A systematic literature review ",
journal = "Information and Software Technology ",
volume = "54",
number = "12",
pages = "1340 - 1356",
year = "2012",
note = "Special Section on Software Reliability and Security ",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2012.07.008",
url = "http://www.sciencedirect.com/science/article/pii/S0950584912001346",
author = "IvÃ¡n Santiago and Ã�lvaro JimÃ©nez and Juan Manuel Vara and Valeria De Castro and VerÃ³nica A. Bollati and Esperanza Marcos",
keywords = "Traceability",
keywords = "Model-Driven Engineering",
keywords = "Systematic literature review ",
abstract = "Context Model-Driven Engineering provides a new landscape for dealing with traceability in software development. Objective Our goal is to analyze the current state of the art in traceability management in the context of Model-Driven Engineering. Method We use the systematic literature review based on the guidelines proposed by Kitchenham. We propose five research questions and six quality assessments. Results Of the 157 relevant studies identified, 29 have been considered primary studies. These studies have resulted in 17 proposals. Conclusion The evaluation shows that the most addressed operations are storage, \{CRUD\} and visualization, while the most immature operations are exchange and analysis traceability information. "
}
@article{Nair2014689,
title = "An extended systematic literature review on provision of evidence for safety certification ",
journal = "Information and Software Technology ",
volume = "56",
number = "7",
pages = "689 - 717",
year = "2014",
note = "",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2014.03.001",
url = "http://www.sciencedirect.com/science/article/pii/S0950584914000603",
author = "Sunil Nair and Jose Luis de la Vara and Mehrdad Sabetzadeh and Lionel Briand",
keywords = "Safetyâ€“critical systems",
keywords = "Safety standards",
keywords = "Safety compliance",
keywords = "Safety certification",
keywords = "Safety evidence",
keywords = "Systematic literature review ",
abstract = "AbstractContext Critical systems in domains such as aviation, railway, and automotive are often subject to a formal process of safety certification. The goal of this process is to ensure that these systems will operate safely without posing undue risks to the user, the public, or the environment. Safety is typically ensured via complying with safety standards. Demonstrating compliance to these standards involves providing evidence to show that the safety criteria of the standards are met. Objective In order to cope with the complexity of large critical systems and subsequently the plethora of evidence information required for achieving compliance, safety professionals need in-depth knowledge to assist them in classifying different types of evidence, and in structuring and assessing the evidence. This paper is a step towards developing such a body of knowledge that is derived from a large-scale empirically rigorous literature review. Method We use a Systematic Literature Review (SLR) as the basis for our work. The \{SLR\} builds on 218 peer-reviewed studies, selected through a multi-stage process, from 4963 studies published between 1990 and 2012. Results We develop a taxonomy that classifies the information and artefacts considered as evidence for safety. We review the existing techniques for safety evidence structuring and assessment, and further study the relevant challenges that have been the target of investigation in the academic literature. We analyse commonalities in the results among different application domains and discuss implications of the results for both research and practice. Conclusion The paper is, to our knowledge, the largest existing study on the topic of safety evidence. The results are particularly relevant to practitioners seeking a better grasp on evidence requirements as well as to researchers in the area of system safety. As a major finding of the review, the results strongly suggest the need for more practitioner-oriented and industry-driven empirical studies in the area of safety certification. "
}
@article{Bubeck2014605,
title = "Model Driven Engineering for the Implementation of User Roles in Industrial Service Robot Applications ",
journal = "Procedia Technology ",
volume = "15",
number = "",
pages = "605 - 612",
year = "2014",
note = "2nd International Conference on System-Integrated Intelligence: Challenges for Product and Production Engineering ",
issn = "2212-0173",
doi = "http://dx.doi.org/10.1016/j.protcy.2014.09.021",
url = "http://www.sciencedirect.com/science/article/pii/S2212017314001364",
author = "Alexander Bubeck and Benjamin Maidel and Felipe Garcia Lopez",
keywords = "Service robotics",
keywords = "tool chain",
keywords = "model driven engineering ",
abstract = "Abstract The implementation and installation of today's service robot applications into industrial processes is a challenging and time taking task that is usually executed by domain experts. The aim of the \{PRACE\} EU-project is to bring a mobile dual arm service robot into small part assembly tasks, which should be used by regular workers. To fulfill this goal a model driven engineering (MDE) tool chain was developed that separates three different user roles in the development process of an industrial service robot application. For each of these roles, the spectrum of required knowledge is reduced, especially for the role of the end user. Based on the implementation of this separation, an evaluation during the development of the \{PRACE\} demonstration use case was done. "
}
@article{GascueÃ±a2012159,
title = "Model-driven engineering techniques for the development of multi-agent systems ",
journal = "Engineering Applications of Artificial Intelligence ",
volume = "25",
number = "1",
pages = "159 - 173",
year = "2012",
note = "",
issn = "0952-1976",
doi = "http://dx.doi.org/10.1016/j.engappai.2011.08.008",
url = "http://www.sciencedirect.com/science/article/pii/S0952197611001515",
author = "JosÃ© M. GascueÃ±a and Elena Navarro and Antonio FernÃ¡ndez-Caballero",
keywords = "Agent-based method",
keywords = "Model-driven development",
keywords = "Meta-modeling",
keywords = "MDE-MAS method and tool",
keywords = "Agent-oriented software development",
keywords = "Multi-agent systems",
keywords = "Surveillance systems",
keywords = "Eclipse-Modelling Framework",
keywords = "Graphical Modelling Framework ",
abstract = "Model-driven engineering (MDE), implicitly based upon meta-model principles, is gaining more and more attention in software systems due to its inherent benefits. Its use normally improves the quality of the developed systems in terms of productivity, portability, inter-operability and maintenance. Therefore, its exploitation for the development of multi-agent systems (MAS) emerges in a natural way. In this paper, agent-oriented software development (AOSD) and \{MDE\} paradigms are fully integrated for the development of MAS. Meta-modeling techniques are explicitly used to speed up several phases of the process. The Prometheus methodology is used for the purpose of validating the proposal. The meta-object facility (MOF) architecture is used as a guideline for developing a \{MAS\} editor according to the language provided by Prometheus methodology. Firstly, an Ecore meta-model for Prometheus language is developed. Ecore is a powerful tool for designing model-driven architectures (MDA). Next, facilities provided by the Graphical Modeling Framework (GMF) are used to generate the graphical editor. It offers support to develop agent models conform to the meta-model specified. Afterwards, it is also described how an agent code generator can be developed. In this way, code is automatically generated using as input the model specified with the graphical editor. A case of study validates the method put in practice for the development of a multi-agent surveillance system. "
}
@article{Gorschek2014176,
title = "On the use of software design models in software development practice: An empirical investigation ",
journal = "Journal of Systems and Software ",
volume = "95",
number = "",
pages = "176 - 193",
year = "2014",
note = "",
issn = "0164-1212",
doi = "http://dx.doi.org/10.1016/j.jss.2014.03.082",
url = "http://www.sciencedirect.com/science/article/pii/S0164121214001022",
author = "Tony Gorschek and Ewan Tempero and Lefteris Angelis",
keywords = "Software design models",
keywords = "Empirical industrial survey",
keywords = "Model-driven engineering (MDD, MDE, UML) ",
abstract = "Abstract Research into software design models in general, and into the \{UML\} in particular, focuses on answering the question how design models are used, completely ignoring the question if they are used. There is an assumption in the literature that the \{UML\} is the de facto standard, and that use of design models has had a profound and substantial effect on how software is designed by virtue of models giving the ability to do model-checking, code generation, or automated test generation. However for this assumption to be true, there has to be significant use of design models in practice by developers. This paper presents the results of a survey summarizing the answers of 3785 developers answering the simple question on the extent to which design models are used before coding. We relate their use of models with (i) total years of programming experience, (ii) open or closed development, (iii) educational level, (iv) programming language used, and (v) development type. The answer to our question was that design models are not used very extensively in industry, and where they are used, the use is informal and without tool support, and the notation is often not UML. The use of models decreased with an increase in experience and increased with higher level of qualification. Overall we found that models are used primarily as a communication and collaboration mechanism where there is a need to solve problems and/or get a joint understanding of the overall design in a group. We also conclude that models are seldom updated after initially created and are usually drawn on a whiteboard or on paper. "
}
@article{Moreno2010612,
title = "Performance analysis of real-time component architectures: An enhanced model interchange approach ",
journal = "Performance Evaluation ",
volume = "67",
number = "8",
pages = "612 - 633",
year = "2010",
note = "Special Issue on Software and Performance ",
issn = "0166-5316",
doi = "http://dx.doi.org/10.1016/j.peva.2009.07.008",
url = "http://www.sciencedirect.com/science/article/pii/S0166531609001047",
author = "Gabriel A. Moreno and Connie U. Smith",
keywords = "Software performance engineering",
keywords = "Performance model interchange",
keywords = "Model driven architecture analysis",
keywords = "Component based real-time systems",
keywords = "Model to model transformation ",
abstract = "Model interchange approaches support the analysis of software architecture and design by enabling a variety of tools to exchange performance models using a common schema. This paper builds on the Software Performance Model Interchange Format (S-PMIF), extending it to support the analysis of real-time systems and adapting it to be suitable for implementation with modeling frameworks such as \{MOF\} or EMF. This enhances the model interchange process by making it possible to define model-to-model transformations from design models into software performance models. The paper addresses real-time system designs expressed in \{CCL\} and their transformation into the S-PMIF for additional performance analyses. "
}
@article{VogelHeuser201554,
title = "Evolution of software in automated production systems: Challenges and research directions ",
journal = "Journal of Systems and Software ",
volume = "110",
number = "",
pages = "54 - 84",
year = "2015",
note = "",
issn = "0164-1212",
doi = "http://dx.doi.org/10.1016/j.jss.2015.08.026",
url = "http://www.sciencedirect.com/science/article/pii/S0164121215001818",
author = "Birgit Vogel-Heuser and Alexander Fay and Ina Schaefer and Matthias Tichy",
keywords = "Evolution",
keywords = "Automation",
keywords = "Automated production systems",
keywords = "Software engineering ",
abstract = "Abstract Coping with evolution in automated production systems implies a cross-disciplinary challenge along the system's life-cycle for variant-rich systems of high complexity. The authors from computer science and automation provide an interdisciplinary survey on challenges and state of the art in evolution of automated production systems. Selected challenges are illustrated on the case of a simple pick and place unit. In the first part of the paper, we discuss the development process of automated production systems as well as the different type of evolutions during the system's life-cycle on the case of a pick and place unit. In the second part, we survey the challenges associated with evolution in the different development phases and a couple of cross-cutting areas and review existing approaches addressing the challenges. We close with summarizing future research directions to address the challenges of evolution in automated production systems. "
}

